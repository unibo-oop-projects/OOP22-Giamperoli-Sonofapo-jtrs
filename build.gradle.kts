/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */    plugins {

    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application
    // You can run your app via task "run": ./gradlew run
    application

    /*
     * Adds tasks to export a runnable jar.
     * In order to create it, launch the "shadowJar" task.
     * The runnable jar will be found in build/libs/projectname-all.jar
     */
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("org.danilopianini.gradle-java-qa") version "1.9.0"

id("org.danilopianini.unibo-oop-gradle-plugin") version "1.0.2"
}





repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    
    // Suppressions for SpotBugs
    compileOnly("com.github.spotbugs:spotbugs-annotations:4.7.3")

    val jUnitVersion = "5.9.1"
    // JUnit API and testing engine
    testImplementation("org.junit.jupiter:junit-jupiter-api:$jUnitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$jUnitVersion")
}

application {
    // Define the main class for the application.
    mainClass.set("it.unibo.jtrs.game.JTetris")
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

 java { toolchain { languageVersion.set(JavaLanguageVersion.of(17)) } }
 java { toolchain { languageVersion.set(JavaLanguageVersion.of(17)) } }
 java { toolchain { languageVersion.set(JavaLanguageVersion.of(17)) } }

 java { toolchain { languageVersion.set(JavaLanguageVersion.of(17)) } }